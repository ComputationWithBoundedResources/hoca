
(STRATEGY
    INNERMOST)

(VAR
    x3 x5 x6 x4 x1 x2 x7 x9 x10 x8 x11 x12 x0)
(RULES
    @(runParser_anonymous_2(x3,x5),x6) -> ParseSuccess(x3,x5)
    @(runParser_anonymous_1(x3),x5) -> runParser_anonymous_2(x3,x5)
    @(runParser_anonymous(x3),x4) -> runParser_anonymous_1(x3)
    @(runParser_0(),x3) -> runParser_anonymous(x3)
    @(runParser_1(),x3) -> ParseFail(x3)
    @(runParser_p(x1),x2) -> @(@(@(@(@(x1,bot[0]()),runParser_0())
                                  ,runParser_1())
                                ,x2)
                              ,0())
    @(runParser(),x1) -> runParser_p(x1)
    @(bind_1(x4,x6),x7) -> @(@(@(x4,x7),bot[2]()),x6)
    @(bind_0(x3,x4),x6) -> @(@(x3,bot[1]()),bind_1(x4,x6))
    string_cond(Nil()) -> @(return(),Unit())
    @(bind_1(x7,x9),x10) -> @(@(@(x7,x10),bot[4]()),x9)
    @(bind_0(x6,x7),x9) -> @(@(x6,bot[3]()),bind_1(x7,x9))
    @(bind'_0(x5),x6) -> x5
    @(bind'_p(x4),x5) -> @(@(bind(),x4),bind'_0(x5))
    @(bind'(),x4) -> bind'_p(x4)
    @(bind_1(x8,x10),x11) -> @(@(@(x8,x11),bot[6]()),x10)
    @(bind_0(x7,x8),x10) -> @(@(x7,bot[5]()),bind_1(x8,x10))
    @(bind_p_f(x7,x8),x9) -> bind_0(x7,x8)
    @(bind_p(x7),x8) -> bind_p_f(x7,x8)
    @(bind(),x7) -> bind_p(x7)
    @(return_0(x8),x10) -> @(x10,x8)
    @(return_x(x8),x9) -> return_0(x8)
    @(return(),x8) -> return_x(x8)
    filter_cond(True(),x7) -> @(return(),x7)
    @(fail_anonymous_2(x10),x12) -> @(x10,x12)
    @(fail_anonymous_1(x10),x11) -> fail_anonymous_2(x10)
    @(fail_anonymous(),x10) -> fail_anonymous_1(x10)
    @(fail_0(),x9) -> fail_anonymous()
    @(fail(),x8) -> fail_0()
    filter_cond(False(),x7) -> fail()
    @(filter_0(x6),x7) -> filter_cond(@(x6,x7),x7)
    @(filter_p(x5),x6) -> @(@(bind(),x5),filter_0(x6))
    @(filter(),x5) -> filter_p(x5)
    any_cond(Nil(),x6,x7,x9) -> @(x7,x9)
    any_cond(Cons(x10,x11),x6,x7,x9) -> @(@(@(@(x6,x10),x7),x11),S(x9))
    @(any_anonymous_2(x6,x7,x8),x9) -> any_cond(x8,x6,x7,x9)
    @(any_anonymous_1(x6,x7),x8) -> any_anonymous_2(x6,x7,x8)
    @(any_anonymous(x6),x7) -> any_anonymous_1(x6,x7)
    @(any_0(),x6) -> any_anonymous(x6)
    @(any(),x5) -> any_0()
    eqChar_cond_1(A()) -> True()
    eqChar_cond_1(B()) -> False()
    eqChar_cond_1(C()) -> False()
    eqChar_cond(A(),x6) -> eqChar_cond_1(x6)
    eqChar_cond_2(A()) -> False()
    eqChar_cond_2(B()) -> True()
    eqChar_cond_2(C()) -> False()
    eqChar_cond(B(),x6) -> eqChar_cond_2(x6)
    eqChar_cond_3(A()) -> False()
    eqChar_cond_3(B()) -> False()
    eqChar_cond_3(C()) -> True()
    eqChar_cond(C(),x6) -> eqChar_cond_3(x6)
    @(eqChar_x(x5),x6) -> eqChar_cond(x5,x6)
    @(eqChar(),x5) -> eqChar_x(x5)
    @(char(),x4) -> @(@(filter(),any()),@(eqChar(),x4))
    string_cond(Cons(x2,x3)) -> @(@(bind'(),@(char(),x2)),@(rec[string_0](),x3))
    @(string(),x1) -> string_cond(x1)
    @(rec[string_0](),x0) -> @(string(),x0)
    eos_cond(Nil(),x2,x3,x4,x5) -> @(@(@(@(x2,Unit()),x3),x4),x5)
    eos_cond(Cons(x6,x7),x2,x3,x4,x5) -> @(x3,x5)
    @(eos_anonymous_2(x2,x3,x4),x5) -> eos_cond(x4,x2,x3,x4,x5)
    @(eos_anonymous_1(x2,x3),x4) -> eos_anonymous_2(x2,x3,x4)
    @(eos_anonymous(x2),x3) -> eos_anonymous_1(x2,x3)
    @(eos_0(),x2) -> eos_anonymous(x2)
    @(eos(),x1) -> eos_0()
    main(x0) -> @(@(runParser()
                   ,@(@(bind'(),@(rec[string_0](),Cons(A(),Cons(B(),Nil()))))
                     ,eos()))
                 ,x0))

