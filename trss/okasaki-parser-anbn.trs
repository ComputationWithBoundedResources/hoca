
(STRATEGY
    INNERMOST)

(VAR
    x3 x5 x6 x4 x2 x13 x14 x12 x15 x7 x11 x8 x9 x10 x1)
(RULES
    @(runParser_anonymous_2(x3,x5),x6) -> ParseSuccess(x3,x5)
    @(runParser_anonymous_1(x3),x5) -> runParser_anonymous_2(x3,x5)
    @(runParser_anonymous(x3),x4) -> runParser_anonymous_1(x3)
    @(runParser_0(),x3) -> runParser_anonymous(x3)
    @(runParser_1(),x3) -> ParseFail(x3)
    @(bind_1(x3,x5),x6) -> @(@(@(x3,x6),bot[2]()),x5)
    @(bind_0(x2,x3),x5) -> @(@(x2,bot[1]()),bind_1(x3,x5))
    @(promote_0(),x2) -> x2
    @(bind_1(x3,x5),x6) -> @(@(@(x3,x6),bot[4]()),x5)
    @(bind_0(x2,x3),x5) -> @(@(x2,bot[3]()),bind_1(x3,x5))
    @(max_x(0()),x13) -> x13
    @(max_x(S(x14)),0()) -> S(x14)
    @(max_x(S(x12)),S(x15)) -> S(@(max_x(x12),x15))
    @(fcp_0(x7,x12),x11) -> @(x7,@(max_x(x12),x11))
    @(fcp(x4,x6,x7,x8,x9),x10) -> @(@(@(@(@(x4,bot[6]()),x6),fcp_0(x7,x10)),x8)
                                   ,x9)
    @(alt_anonymous_2(x3,x4,x6,x7,x8),x9) -> @(@(@(@(@(x3,bot[5]()),x6)
                                                  ,fcp(x4,x6,x7,x8,x9))
                                                ,x8)
                                              ,x9)
    @(alt_anonymous_1(x3,x4,x6,x7),x8) -> alt_anonymous_2(x3,x4,x6,x7,x8)
    @(alt_anonymous(x3,x4,x6),x7) -> alt_anonymous_1(x3,x4,x6,x7)
    @(alt_0(x3,x4),x6) -> alt_anonymous(x3,x4,x6)
    @(alt_p_q(x3,x4),x5) -> alt_0(x3,x4)
    @(bind_1(x4,x6),x7) -> @(@(@(x4,x7),bot[8]()),x6)
    @(bind_0(x3,x4),x6) -> @(@(x3,bot[7]()),bind_1(x4,x6))
    @(someP_0(),x3) -> return_x(Some(x3))
    @(bind_1(x6,x8),x9) -> @(@(@(x6,x9),bot[10]()),x8)
    @(bind_0(x5,x6),x8) -> @(@(x5,bot[9]()),bind_1(x6,x8))
    @(bind_1(x7,x9),x10) -> @(@(@(x7,x10),bot[12]()),x9)
    @(bind_0(x6,x7),x9) -> @(@(x6,bot[11]()),bind_1(x7,x9))
    @(bind'_0(x5),x6) -> x5
    @(bind_1(x8,x10),x11) -> @(@(@(x8,x11),bot[14]()),x10)
    @(bind_0(x7,x8),x10) -> @(@(x7,bot[13]()),bind_1(x8,x10))
    @(bind_p_f(x7,x8),x9) -> bind_0(x7,x8)
    filter_cond(True(),x3) -> return_x(x3)
    @(fail_anonymous_2(x10),x12) -> @(x10,x12)
    @(fail_anonymous_1(x10),x11) -> fail_anonymous_2(x10)
    @(fail_anonymous(),x10) -> fail_anonymous_1(x10)
    @(fail_0(),x9) -> fail_anonymous()
    @(fail(),x8) -> fail_0()
    filter_cond(False(),x7) -> fail()
    @(filter_0(x6),x7) -> filter_cond(@(x6,x7),x7)
    @(any_anonymous_2(x6,x7,Nil()),x9) -> @(x7,x9)
    @(any_anonymous_2(x6,x7,Cons(x10,x11)),x9) -> @(@(@(@(x6,x10),x7),x11)
                                                   ,S(x9))
    @(any_anonymous_1(x6,x7),x8) -> any_anonymous_2(x6,x7,x8)
    @(any_anonymous(x6),x7) -> any_anonymous_1(x6,x7)
    @(any_0(),x6) -> any_anonymous(x6)
    @(any(),x5) -> any_0()
    @(eqChar_x(A()),A()) -> True()
    @(eqChar_x(A()),B()) -> False()
    @(eqChar_x(A()),C()) -> False()
    @(eqChar_x(B()),A()) -> False()
    @(eqChar_x(B()),B()) -> True()
    @(eqChar_x(B()),C()) -> False()
    @(eqChar_x(C()),A()) -> False()
    @(eqChar_x(C()),B()) -> False()
    @(eqChar_x(C()),C()) -> True()
    @(return_0(x3),x5) -> @(x5,x3)
    @(return_x(x3),x4) -> return_0(x3)
    @(pas_1(x5),Some(x3)) ->
      bind_p_f(alt_p_q(bind_p_f(bind_p_f(any(),filter_0(eqChar_x(A())))
                               ,someP_0())
                      ,return_x(None()))
              ,pas_1(bind_p_f(bind_p_f(any(),filter_0(eqChar_x(B())))
                             ,bind'_0(x5))))
    @(pas_1(x3),None()) -> return_x(x3)
    @(eos_anonymous_2(x2,x3,Nil()),x5) -> @(@(@(@(x2,Unit()),x3),Nil()),x5)
    @(eos_anonymous_2(x2,x3,Cons(x6,x7)),x5) -> @(x3,x5)
    @(eos_anonymous_1(x2,x3),x4) -> eos_anonymous_2(x2,x3,x4)
    @(eos_anonymous(x2),x3) -> eos_anonymous_1(x2,x3)
    @(eos_0(),x2) -> eos_anonymous(x2)
    @(eos(),x1) -> eos_0()
    main(x2) ->
      @(@(@(@(bind_0(bind_p_f(alt_p_q(bind_p_f(bind_p_f(any()
                                                       ,filter_0(eqChar_x(A())))
                                              ,someP_0())
                                     ,return_x(None()))
                             ,pas_1(eos()))
                    ,promote_0())
             ,runParser_0())
           ,runParser_1())
         ,x2)
       ,0()))

